services:
  db:
    image: postgres
    container_name: fastproto-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppassword}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-appdb}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastproto-backend
    env_file:
      - ./backend/.env
    environment:
      APP_NAME: ${APP_NAME:-Fast Prototype API}
      APP_ENV: ${APP_ENV:-production}
      DEBUG: ${DEBUG:-false}
      SECRET_KEY: ${SECRET_KEY:-dev-secret}
      BACKEND_HOST: ${BACKEND_HOST:-0.0.0.0}
      BACKEND_PORT: ${BACKEND_PORT:-8000}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER:-${POSTGRES_USER:-appuser}}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-${POSTGRES_PASSWORD:-apppassword}}
      DATABASE_NAME: ${DATABASE_NAME:-${POSTGRES_DB:-appdb}}
      DATABASE_SSLMODE: ${DATABASE_SSLMODE:-disable}
      ALEMBIC_SCRIPT_LOCATION: ${ALEMBIC_SCRIPT_LOCATION:-alembic}
      # SECRET_KEY will be loaded from env_file if present
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    command: ["/bin/sh", "-c", "python -m app.utils.wait_for_db && python run_migrations.py && uvicorn app.main:app --host ${BACKEND_HOST:-0.0.0.0} --port ${BACKEND_PORT:-8000}"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:${BACKEND_PORT:-8000}}
    container_name: fastproto-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  db_data:


